group 'org.autolook'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'application'

mainClassName = "org.autolook.main.SampleApp"

applicationDefaultJvmArgs = ["-server", "-Xms512M", "-Xmx2048M" , "-Xss256k" , "-Xincgc" , "-XX:+HeapDumpOnOutOfMemoryError" , "-Dfile.encoding=UTF-8"]

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
}


dependencies {
    compile("mysql:mysql-connector-java:5.1.36")
    compile("com.alibaba:druid:1.0.16")
    compile("com.alibaba:fastjson:1.2.7")

    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
